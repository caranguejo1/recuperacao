{"ast":null,"code":"var _jsxFileName = \"/home/viccenzo/Documentos/Recuperacao/a2-programacao1-main/front/src/paginas/FormDisciplina.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TituloCadastro from \"../componentes/TituloCadastro\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormDisciplina() {\n  _s();\n  const navegacao = useNavigate();\n  const {\n    id\n  } = useParams();\n\n  //Declarar um useState para cada campo da tabela\n  const [nomedisciplina, setNomeDisciplina] = useState('');\n  const [fase, setFase] = useState('');\n  const voltar = () => {\n    navegacao('/listardisciplina');\n  };\n  const selecionar = async () => {\n    let {\n      data\n    } = await axios.get(`http://localhost:4000/disciplina/${id}`);\n    //carregar cada campo na sua respectiva variável\n    setNomeDisciplina(data.nomedisciplina);\n    setFase(data.fase);\n  };\n  const alterar = async () => {\n    //montar o json do body com todos os campos que precisam ser enviados\n    let body = {\n      \"nomedisciplina\": nomedisciplina,\n      \"fase\": fase\n    };\n    await axios.put(`http://localhost:4000/disciplina/${id}`, body);\n    voltar();\n  };\n  const inserir = async () => {\n    let body = {\n      \"nomedisciplina\": nomedisciplina,\n      \"fase\": fase\n    };\n    await axios.post(`http://localhost:4000/disciplina`, body);\n    voltar();\n  };\n  const salvar = async () => {\n    if (id) {\n      alterar();\n    } else {\n      inserir();\n    }\n  };\n  const excluir = async () => {\n    await axios.delete(`http://localhost:4000/disciplina/${id}`);\n    voltar();\n  };\n  useEffect(() => {\n    if (id) {\n      selecionar();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TituloCadastro, {\n      id: id,\n      titulo: \"disciplina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"C\\xF3digo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Nome da disciplina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: nomedisciplina,\n          onChange: evento => setNomeDisciplina(evento.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Fase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: fase,\n          onChange: evento => setFase(evento.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => salvar(),\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => voltar(),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), id && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: () => excluir(),\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(FormDisciplina, \"037YUudSs37EHuCOx1bPseEWthA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = FormDisciplina;\n;\nvar _c;\n$RefreshReg$(_c, \"FormDisciplina\");","map":{"version":3,"names":["useNavigate","useParams","useState","useEffect","axios","TituloCadastro","jsxDEV","_jsxDEV","Fragment","_Fragment","FormDisciplina","_s","navegacao","id","nomedisciplina","setNomeDisciplina","fase","setFase","voltar","selecionar","data","get","alterar","body","put","inserir","post","salvar","excluir","delete","children","titulo","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","evento","target","onClick","_c","$RefreshReg$"],"sources":["/home/viccenzo/Documentos/Recuperacao/a2-programacao1-main/front/src/paginas/FormDisciplina.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TituloCadastro from \"../componentes/TituloCadastro\";\n\nexport default function FormDisciplina() {\n    const navegacao = useNavigate();\n    const { id } = useParams();\n\n    //Declarar um useState para cada campo da tabela\n    const [nomedisciplina, setNomeDisciplina] = useState('');\n    const [fase, setFase] = useState('');\n\n    const voltar = () => {\n        navegacao('/listardisciplina');\n    };\n\n    const selecionar = async () => {\n        let { data } = await axios.get(`http://localhost:4000/disciplina/${id}`);\n        //carregar cada campo na sua respectiva variável\n        setNomeDisciplina(data.nomedisciplina);\n        setFase(data.fase);\n    }\n\n    const alterar = async () => {\n        //montar o json do body com todos os campos que precisam ser enviados\n        let body = {\n            \"nomedisciplina\": nomedisciplina,\n            \"fase\": fase\n        };\n\n        await axios.put(`http://localhost:4000/disciplina/${id}`, body);\n        voltar();\n    }\n\n    const inserir = async () => {\n        let body = {\n            \"nomedisciplina\": nomedisciplina,\n            \"fase\": fase\n        };\n\n        await axios.post(`http://localhost:4000/disciplina`, body);\n        voltar();\n    }\n\n    const salvar = async () => {\n        if (id) {\n            alterar();\n        }\n        else {\n            inserir();\n        }\n    }\n\n    const excluir = async () => {\n        await axios.delete(`http://localhost:4000/disciplina/${id}`);\n        voltar();\n    }\n\n    useEffect(() => {\n        if (id) {\n            selecionar();\n        }\n    }, []);\n\n    return (\n        <>\n            <TituloCadastro id={id} titulo=\"disciplina\" />\n\n            <form>\n                {id && (\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                            Código\n                        </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={id}\n                        />\n                    </div>\n                )}\n\n                <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                        Nome da disciplina\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={nomedisciplina}\n                        onChange={(evento) => setNomeDisciplina(evento.target.value)}\n                    />\n                </div>\n\n                <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                        Fase\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={fase}\n                        onChange={(evento) => setFase(evento.target.value)}\n                    />\n                </div>\n\n                <button type=\"button\" className=\"btn btn-primary\"\n                    onClick={() => salvar()}>\n                    Salvar\n                </button>\n                <button type=\"button\"\n                    className=\"btn btn-secondary\"\n                    onClick={() => voltar()}>\n                    Cancelar\n                </button>\n                {id && (\n                    <button type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={() => excluir()}>\n                        Excluir\n                    </button>\n                )}\n            </form>\n        </>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}